version: '3.7'

networks:
  net:
    driver: bridge

services:
  authelia:
    image: authelia/authelia
    container_name: authelia
    volumes:
      - ./authelia:/config
    networks:
      - net
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`auth.${HOSTNAME}`)'
      - 'traefik.http.routers.authelia.entrypoints=https'
      - 'traefik.http.routers.authelia.tls=true'
      - 'traefik.http.routers.authelia.tls.certresolver=letsencrypt'
      - 'traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/verify?rd=https://auth.${HOSTNAME}'
      - 'traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'
    expose:
      - 9091
    restart: unless-stopped
    healthcheck:
      disable: true
    environment:
      - TZ=${TIMEZONE}

  redis:
    image: redis:alpine
    container_name: redis
    volumes:
      - ./redis:/data
    networks:
      - net
    expose:
      - 6379
    restart: unless-stopped
    environment:
      - TZ=${TIMEZONE}

  traefik:
    image: traefik:v2.8
    container_name: traefik
    volumes:
      - ./traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - net
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`traefik.${HOSTNAME}`)'
      - 'traefik.http.routers.api.entrypoints=https'
      - 'traefik.http.routers.api.service=api@internal'
      - 'traefik.http.routers.api.tls=true'
      - 'traefik.http.routers.api.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.api.middlewares=authelia@docker'
    ports:
      - 80:80
      - 443:443
    command:
      - '--api'
      - '--providers.docker=true'
      - '--providers.docker.exposedByDefault=false'
      - '--entrypoints.http=true'
      - '--entrypoints.http.address=:80'
      - '--entrypoints.http.http.redirections.entrypoint.to=https'
      - '--entrypoints.http.http.redirections.entrypoint.scheme=https'
      - '--entrypoints.https=true'
      - '--entrypoints.https.address=:443'
      - '--certificatesResolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}'
      - '--certificatesResolvers.letsencrypt.acme.storage=/etc/traefik/acme.json'
      - '--certificatesResolvers.letsencrypt.acme.httpChallenge.entryPoint=http'
      - '--log=true'
      - '--log.level=INFO'
      - '--log.filepath=/etc/traefik/traefik.log'
      - '--accesslog=true'
      - '--accesslog.fields.headers.defaultmode=keep'
      - '--accesslog.filepath=/etc/traefik/access.log'

  whoami:
    image: traefik/whoami
    container_name: whoami
    networks:
      - net
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.whoami.rule=Host(`whoami.${HOSTNAME}`)'
      - 'traefik.http.routers.whoami.entrypoints=https'
      - 'traefik.http.routers.whoami.tls=true'
      - 'traefik.http.routers.whoami.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.whoami.middlewares=authelia@docker'
    expose:
      - 80
    restart: unless-stopped

  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    networks:
      - net
    volumes:
      - ./heimdal:/config
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.heimdall.rule=Host(`launcher.${HOSTNAME}`)'
      - 'traefik.http.routers.heimdall.entrypoints=https'
      - 'traefik.http.routers.heimdall.tls=true'
      - 'traefik.http.routers.heimdall.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.heimdall.middlewares=authelia@docker'
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    expose:
      - 80
    restart: unless-stopped

  speedtest:
    image: adolfintel/speedtest
    container_name: speedtest
    networks:
      - net
    volumes:
      - ./heimdal:/config
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.speedtest.rule=Host(`speed.${HOSTNAME}`)'
      - 'traefik.http.routers.speedtest.entrypoints=https'
      - 'traefik.http.routers.speedtest.tls=true'
      - 'traefik.http.routers.speedtest.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.speedtest.middlewares=authelia@docker'
    environment:
      - TZ=${TIMEZONE}
      - DISTANCE=mi
    expose:
      - 80
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    networks:
      - net
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - WEBUI_PORT=80
    volumes:
      - ./qbittorrent:/config
      - ${DOWNLOADS_DIR}:/downloads
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.qbittorrent.rule=Host(`torrent.${HOSTNAME}`)'
      - 'traefik.http.routers.qbittorrent.entrypoints=https'
      - 'traefik.http.routers.qbittorrent.tls=true'
      - 'traefik.http.routers.qbittorrent.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.qbittorrent.middlewares=authelia@docker'
    expose:
      - 80
      - 6881
    restart: unless-stopped

  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    networks:
      - net
    environment:
      - PUID=1000
      - PGID=1000
      - FB_NOAUTH=noauth
      - FB_BRANDING.DISABLEEXTERNAL=true
    volumes:
      - ${DOWNLOADS_DIR}:/srv
      - ./filebrowser/config:/config
      - ./filebrowser/database:/database
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.filebrowser.rule=Host(`files.${HOSTNAME}`)'
      - 'traefik.http.routers.filebrowser.entrypoints=https'
      - 'traefik.http.routers.filebrowser.tls=true'
      - 'traefik.http.routers.filebrowser.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.filebrowser.middlewares=authelia@docker'
    expose:
      - 80
    restart: unless-stopped

  # jellyfin:
  #   image: lscr.io/linuxserver/jellyfin
  #   container_name: jellyfin
  #   networks:
  #     - net
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=${TIMEZONE}
  #   volumes:
  #     - ./jellyfin/config:/config
  #     - ${DOWNLOADS_DIR}:/data
  #   labels:
  #     - 'traefik.enable=true'
  #     - 'traefik.port=8096'
  #     - 'traefik.http.routers.jellyfin.rule=Host(`jellyfin.${HOSTNAME}`)'
  #     - 'traefik.http.routers.jellyfin.entrypoints=https'
  #     - 'traefik.http.routers.jellyfin.tls=true'
  #     - 'traefik.http.routers.jellyfin.tls.certresolver=letsencrypt'
  #     - 'traefik.http.routers.jellyfin.middlewares=authelia@docker'
  #   expose:
  #     - 8096
  #   restart: unless-stopped

  olaris:
    image: olaristv/olaris-server
    container_name: olaris
    networks:
      - net
    environment:
      - OLARIS_UID=1000
      - OLARIS_GID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${DOWNLOADS_DIR}:/var/media
      - ./olaris:/home/olaris/.config/olaris
    labels:
      - 'traefik.enable=true'
      - 'traefik.port=8080'
      - 'traefik.http.routers.olaris.rule=Host(`olaris.${HOSTNAME}`)'
      - 'traefik.http.routers.olaris.entrypoints=https'
      - 'traefik.http.routers.olaris.tls=true'
      - 'traefik.http.routers.olaris.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.olaris.middlewares=authelia@docker'
    expose:
      - 8080
    restart: unless-stopped
